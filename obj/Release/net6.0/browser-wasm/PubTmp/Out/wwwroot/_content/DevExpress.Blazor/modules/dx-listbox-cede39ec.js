import{a as e}from"./_tslib-bfc426b4.js";import{D as t}from"./dx-ui-element-fa46d41b.js";import{R as s}from"./rect-2684652a.js";import{$ as i}from"./lit-element-42a89b46.js";import{e as n,n as o}from"./property-0899c55e.js";import"./lit-element-base-cc37ea0b.js";import"./data-qa-utils-8be7c726.js";import"./layouthelper-c2462bd3.js";import"./point-9c6ab88a.js";class l extends Event{constructor(){super(l.eventName,{bubbles:!0,composed:!1,cancelable:!0})}}l.eventName="dxlistboxselecteditemschanged";let r=class extends t{constructor(){super(),this.boundSlotChangedHandler=this.onSlotChanged.bind(this),this.displayed=!1,this.isMultipleColumns=!1,this.itemContainerElement=null,this.resizeObserver=new ResizeObserver(this.onResized.bind(this)),this.itemsContainerMutationObserver=new MutationObserver(this.onSelectedItemChanged.bind(this))}connectedCallback(){super.connectedCallback(),this.resizeObserver.observe(this)}disconnectedCallback(){super.disconnectedCallback(),this.resizeObserver.disconnect(),this.itemsContainerMutationObserver.disconnect()}render(){return i`
            <slot @slotchange="${this.boundSlotChangedHandler}">
            </slot>
        `}scrollToFocusedItem(e){const t=this.querySelector("[data-is-selected-item]");if(!t)return;if(!e)return void t.scrollIntoView({block:"nearest"});this.getScrollableContainerElement().scrollTop=t.offsetTop}onSlotChanged(e){this.itemContainerElement=this.getItemContainerElement(),this.itemsContainerMutationObserver.observe(this.itemContainerElement,{attributeFilter:["data-is-selected-item"],attributeOldValue:!0,subtree:!0})}onResized(e,t){if(e.length<1)return;const i=!s.fromDomRect(e[0].contentRect).isEmpty;i&&!this.displayed&&this.scrollToFocusedItem(!0),this.displayed=i}onSelectedItemChanged(e,t){const s=new l;this.dispatchEvent(s)}getItemContainerElement(){return this.querySelector(this.isMultipleColumns?"table tbody":"ul")}getScrollableContainerElement(){return this.isMultipleColumns?this.querySelector(".dxbs-grid-vsd"):this}};e([n({type:Boolean,attribute:"is-multiple-columns"})],r.prototype,"isMultipleColumns",void 0),r=e([o("dxbl-listbox")],r);const a={loadModule:function(){}};export{r as DxListBox,l as ListBoxSelectedItemsChangedEvent,a as default};
